name: Testing Pipeline

on:
  push:
    branches: [ dev ]

jobs:

  testing:
    runs-on: ubuntu-latest

    steps:
      # Step 1      
      - uses: actions/checkout@v2
      # Step 2
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: x64
      # Step 3
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv
      # Step 4
      - name:  Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      # Step 5
      - name: Activate and Install Dependencies into Virtual env
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      # Step 6     
      - name: Activate venv and Run Test        
        run: . venv/bin/activate && pytest
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
          TOKEN_ALGORITHM: ${{ secrets.TOKEN_ALGORITHM }}


      